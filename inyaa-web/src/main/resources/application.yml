server:
  port: 8082
  servlet:
    #不能配置为/，否则认证通过后不能重定向回客户端的访问地址
    context-path: /server


logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

oauth2:
  server:
    url: http://122.51.60.92:30840
    logout: ${oauth2.server.url}/logout #可以实现单点登录，不能实现单点登出
    client-id: postman # 2 客户端ID
    client-secret: postman # 3 客户端密码
  resource:
    url: http://localhost:8081

spring:
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  application:
    name: inyaa-web
  datasource:
    url: jdbc:mysql://122.51.60.92:32129/inyaa?useSSL=false&characterEncoding=utf8&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          inyaa: # 1 注册客户端名称，随意指定，但是要与provider的配置相一致
            client-id: postman # 2 客户端ID
            client-secret: postman # 3 客户端密码
            authorization-grant-type: authorization_code # 4 认证类型
            #默认重定向URI模板是{baseUrl}/login/oauth2/code/{registrationId}。
            #registrationId是ClientRegistration的唯一标识符。
            redirect-uri: http://122.51.60.92:32230/server/login/oauth2/code/inyaa  # 5 回调地址，需要配置到数据表中，默认写法，注意最后的路径是注册客户端名称
            scope: any #请求范围
            client-name: 客户端1
          github:
            client-id: e6e6a9b66c052a99a288 # 2 客户端ID
            client-secret: 93129918b0aae5b8dcc41656dda70bab04e94527 # 3 客户端密码
        provider:
          inyaa:
            authorization-uri: ${oauth2.server.url}/oauth/authorize # 7 认证地址
            token-uri: ${oauth2.server.url}/oauth/token # 8 获取token地址
            user-info-uri: http://122.51.60.92:32756/userInfo # 9 获取用户信息地址，必须配置
            userNameAttribute: username # 10 指定用户信息中哪个属性是用户名称
